package main

import (
	"strconv"
	"strings"

	tg "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)


func coefficient(bot *tg.BotAPI, update tg.Update, small string){
	text := ""
	smallWH := strings.Split(small, "|")[0]
	smallBT := strings.Split(small, "|")[1]
	bt:=smallBT
	indexes:=strings.Split(small, "|")[2]
	rowZero := tg.NewInlineKeyboardRow(tg.NewInlineKeyboardButtonData("üéÅ –ë–µ—Å–ø–ª–∞—Ç–Ω–æ", "result_"+smallWH+"|"+bt+"|"+indexes+"|"+"0"))
	rowOne := tg.NewInlineKeyboardRow(tg.NewInlineKeyboardButtonData("–¥–æ X1", "result_"+smallWH+"|"+bt+"|"+indexes+"|"+"1"))
	rowTwo := tg.NewInlineKeyboardRow(tg.NewInlineKeyboardButtonData("–¥–æ X2", "result_"+smallWH+"|"+bt+"|"+indexes+"|"+"2"))
	rowThree := tg.NewInlineKeyboardRow(tg.NewInlineKeyboardButtonData("–¥–æ X3", "result_"+smallWH+"|"+bt+"|"+indexes+"|"+"3"))
	rowFour := tg.NewInlineKeyboardRow(tg.NewInlineKeyboardButtonData("–¥–æ X4", "result_"+smallWH+"|"+bt+"|"+indexes+"|"+"4"))
	rowFive := tg.NewInlineKeyboardRow(tg.NewInlineKeyboardButtonData("–¥–æ X5", "result_"+smallWH+"|"+bt+"|"+indexes+"|"+"5"))
	rowSix := tg.NewInlineKeyboardRow(tg.NewInlineKeyboardButtonData("–¥–æ X7", "result_"+smallWH+"|"+bt+"|"+indexes+"|"+"7"))
	if len(strings.Split(indexes, ":")) > 1 {
		index1 := strings.Split(indexes, ":")[0]
		index2 := strings.Split(indexes, ":")[1]
		text = textForCoefWithTwo(smallWH, smallBT, index1, index2)
	}
	if  len(strings.Split(indexes, ":")) == 1 {
		index1 := strings.Split(strings.Split(small, "|")[2], ":")[0]
		text = textForCoefOne(smallWH, smallBT, index1)
	}
	rowHome := tg.NewInlineKeyboardRow(tg.NewInlineKeyboardButtonData("üè†–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞", "start_1"))
	buttonClose := tg.NewInlineKeyboardButtonData("‚ùå–ó–∞–∫—Ä—ã—Ç—å", "close_1")
	buttonback := tg.NewInlineKeyboardButtonData("ü°∏–î–∞—Ç—ã", "time_"+smallWH+"|"+smallBT)

	rowFunc := tg.NewInlineKeyboardRow(buttonback, buttonClose)
	keyboard := tg.NewInlineKeyboardMarkup(rowZero, rowOne, rowTwo, rowThree, rowFour, rowFive, rowSix,rowHome, rowFunc)

	msg := tg.NewEditMessageText(update.CallbackQuery.Message.Chat.ID, update.CallbackQuery.Message.MessageID, text)
	msg.ReplyMarkup = &keyboard
	bot.Send(msg)

}

func textForCoefOne(wh string, bt string, index1 string) (text string) {
	ind1, _ := strconv.Atoi(index1)
	text += `‚ú™–°–∫–ª–∞–¥—ã:`
	wh = strings.Trim(wh, ":")
	arr := strings.Split(wh, ":")
	for _, v := range arr {
		index, _ := strconv.Atoi(v)

		text += "\n- " + whArr[index]

	}
	switch bt {
	case "1":
		text += "\n‚ú™–¢–∏–ø –ø–æ—Å—Ç–∞–≤–∫–∏: –∫–æ—Ä–æ–±–∞"
	case "2":
		text += "\n‚ú™–¢–∏–ø –ø–æ—Å—Ç–∞–≤–∫–∏: –º–æ–Ω–æ–ø–∞–ª–ª–µ—Ç—ã"
	case "3":
		text += "\n‚ú™–¢–∏–ø –ø–æ—Å—Ç–∞–≤–∫–∏: —Å—É–ø–µ—Ä—Å–µ–π—Ñ"
	case "4":
		text += "\n‚ú™–¢–∏–ø –ø–æ—Å—Ç–∞–≤–∫–∏: QR - –ø–æ—Å—Ç–∞–≤–∫–∏"
	}
	text +=
		"\n‚ú™–î–∞—Ç–∞: " + date()[ind1]
		text+="\n‚òÜ–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Å–∏–º–∞–ª—å–Ω—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç"
	return text
}

func textForCoefWithTwo(wh string, bt string, index1 string, index2 string) (text string) {
	ind1, _ := strconv.Atoi(index1)
	ind2, _ := strconv.Atoi(index2)
	text += `‚ú™–°–∫–ª–∞–¥—ã:`
	wh = strings.Trim(wh, ":")
	arr := strings.Split(wh, ":")
	for _, v := range arr {
		index, _ := strconv.Atoi(v)

		text += "\n- " + whArr[index]

	}
	switch bt {
	case "1":
		text += "\n‚ú™–¢–∏–ø –ø–æ—Å—Ç–∞–≤–∫–∏: –∫–æ—Ä–æ–±–∞"
	case "2":
		text += "\n‚ú™–¢–∏–ø –ø–æ—Å—Ç–∞–≤–∫–∏: –º–æ–Ω–æ–ø–∞–ª–ª–µ—Ç—ã"
	case "3":
		text += "\n‚ú™–¢–∏–ø –ø–æ—Å—Ç–∞–≤–∫–∏: —Å—É–ø–µ—Ä—Å–µ–π—Ñ"
	case "4":
		text += "\n‚ú™–¢–∏–ø –ø–æ—Å—Ç–∞–≤–∫–∏: QR - –ø–æ—Å—Ç–∞–≤–∫–∏"
	}
	text += "\n‚ú™–î–∞—Ç—ã: c " + date()[ind1] + ` –ø–æ ` + date()[ind2]
	text+="\n‚òÜ–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç"
	return text
}
